import type { ColumnType, Generated, Insertable, Selectable, Updateable } from 'kysely'

export type TWordTable = {
    id: Generated<number> // Can be autogenerated by db, optional in inserts and updates
    englishWord: string
    polishWord: string

    // You can specify a different type for each operation (select, insert and
    // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
    // wrapper. Here we define a column `createdAt` that is selected as
    // a `Date`, can optionally be provided as a `string` in inserts and
    // can never be updated:
    createdAt: ColumnType<Date, string | undefined, never>
}

// You should not use the table schema interfaces directly. Instead, you should
// use the `Selectable`, `Insertable` and `Updateable` wrappers. These wrappers
// make sure that the correct types are used in each operation.
export type TWord = Selectable<TWordTable>
export type TNewWord = Insertable<TWordTable>
export type TWordUpdate = Updateable<TWordTable>
